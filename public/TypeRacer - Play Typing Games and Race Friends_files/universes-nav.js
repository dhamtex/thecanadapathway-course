!function(e){var n={};function t(i){if(n[i])return n[i].exports;var s=n[i]={i:i,l:!1,exports:{}};return e[i].call(s.exports,s,s.exports,t),s.l=!0,s.exports}t.m=e,t.c=n,t.d=function(e,n,i){t.o(e,n)||Object.defineProperty(e,n,{enumerable:!0,get:i})},t.r=function(e){"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(e,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(e,"__esModule",{value:!0})},t.t=function(e,n){if(1&n&&(e=t(e)),8&n)return e;if(4&n&&"object"==typeof e&&e&&e.__esModule)return e;var i=Object.create(null);if(t.r(i),Object.defineProperty(i,"default",{enumerable:!0,value:e}),2&n&&"string"!=typeof e)for(var s in e)t.d(i,s,function(n){return e[n]}.bind(null,s));return i},t.n=function(e){var n=e&&e.__esModule?function(){return e.default}:function(){return e};return t.d(n,"a",n),n},t.o=function(e,n){return Object.prototype.hasOwnProperty.call(e,n)},t.p="",t(t.s=7)}({7:function(module,exports){eval("const methods =  {\n  currentPage: 0,\n  totalPages: 0,\n  pageWidth: 0,\n  totalWidth: 0,\n  itemsPerPage: 3,\n  init: function() {\n    this.prev = document.getElementById('sidebarBlocks-prev');\n    this.next = document.getElementById('sidebarBlocks-next');\n    this.carousel = document.getElementById('sidebarBlocks-carousel');\n    this.container = document.getElementById('sidebarBlocks-container');\n\n    this.totalPages = this.calculatePages();\n    this.currentPage = 1;\n    this.scrollToCurrentPage();\n\n    this.prev.addEventListener('click', function(e) {\n      this.scrollUniverses(-1);\n    }.bind(this));\n\n    this.next.addEventListener('click', function(e) {\n      this.scrollUniverses(1);\n    }.bind(this));\n\n    window.addEventListener('resize', function(e) {\n      this.calculatePages();\n      this.scrollToCurrentPage();\n    }.bind(this));\n  },\n  scrollUniverses: function(direction) {\n      this.container.classList.remove('show');\n      var newPos = direction + this.currentPage;\n      if(newPos > this.totalPages) {\n        this.currentPage = 1;\n      } else if(newPos < 1)  {\n        this.currentPage = this.totalPages;\n      } else {\n        this.currentPage = newPos;\n      }\n      this.scrollToCurrentPage();\n  },\n  scrollToCurrentPage: function() {\n    this.container.classList.remove('show');\n    var endVis = (this.currentPage * this.itemsPerPage);\n    for(i=0; i < this.container.children.length; i++) {\n      if(i < endVis && i >= (endVis - this.itemsPerPage)) {\n        this.container.children[i].classList.add('show');\n      } else {\n        this.container.children[i].classList.remove('show');\n      }\n    }\n    setTimeout(function() {\n      this.container.classList.add('show');\n    }.bind(this), 200); //matches css timing\n  },\n  calculatePages: function() {\n    return Math.ceil(this.container.children.length/this.itemsPerPage);\n  }\n};\n\nmethods.init();\n\n\n//# sourceURL=webpack:///./js/universes-nav.js?")}});